name: Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']
        include:
          - os: ubuntu-latest
            python-version: 3.9
          - os: ubuntu-latest
            python-version: 3.8
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: sigzyme-env
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
      - name: Install pytorch-cuda (if not OSX)
        run: |
          conda install cudatoolkit pytorch pytorch-cuda -c pytorch -c nvidia
        if: runner.os != 'macOS'
      - name: Install pytorch-cpu (if OSX)
        run: |
          conda install pytorch -c pytorch
        if: runner.os == 'macOS'
      - name: Install dependencies
        run: |
          conda install -c conda-forge "poetry>=1.2"
          poetry install
      - name: Test with pytest
        run: pytest tests/ --import-mode importlib --cov -vv

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          poetry install
      - name: Sphinx Build
        run: |
          poetry run sphinx-build -E -b html docs dist/docs
          poetry run sphinx-build -b linkcheck docs dist/docs

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry isort black flake8
          poetry install
      - name: Format Check
        run: |
          isort --diff .
          black --check .
          flake8 . --count --ignore=E203,E266,E501,W503 --select=B,C,E,F,W,T4 --max-complexity=18 --max-line-length=88 --show-source --statistics